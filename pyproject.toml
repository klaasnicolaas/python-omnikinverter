[tool.poetry]
name = "omnikinverter"
version = "0.0.0"
description = "Asynchronous Python client for the Omnik Inverter"
authors = ["Klaas Schoute <hello@student-techlife.com>"]
maintainers = ["Klaas Schoute <hello@student-techlife.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/klaasnicolaas/python-omnikinverter"
repository = "https://github.com/klaasnicolaas/python-omnikinverter"
documentation = "https://github.com/klaasnicolaas/python-omnikinverter"
keywords = ["omnik", "inverter", "power", "energy", "async", "client"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "omnikinverter" },
]

[tool.poetry.dependencies]
aiohttp = ">=3.0.0"
python = "^3.9"
yarl = ">=1.6.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/klaasnicolaas/python-omnikinverter/issues"
Changelog = "https://github.com/klaasnicolaas/python-omnikinverter/releases"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.0.243,<0.0.271"
aresponses = "^2.1.6"
black = ">=22.10,<24.0"
blacken-docs = "^1.13.0"
codespell = "^2.2.4"
coverage = {version = ">=7.2,<8.0", extras = ["toml"]}
mypy = ">=1.0,<1.4"
pre-commit = ">=3.2,<4.0"
pre-commit-hooks = "^4.4.0"
pylint = "^2.17.1"
pytest = "^7.2.2"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
yamllint = "^1.30.0"
covdefaults = "^2.3.0"

[tool.black]
target-version = ['py39']

[tool.coverage.paths]
source = ["omnikinverter"]

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["omnikinverter"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.9"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
extension-pkg-whitelist = [
  "pydantic"
]
ignore= [
  "tests"
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint.DESIGN]
max-attributes=20

[tool.pylint."MESSAGES CONTROL"]
disable= [
    "too-few-public-methods",
    "duplicate-code",
    "format",
    "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length=88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
select = ["ALL"]
ignore = [
  "ANN101", # Self... explanatory
  "ANN401", # Opinionated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful
  "TRY300", # Conflicts with RET505
]

[tool.ruff.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.isort]
known-first-party = ["omnikinverter"]

[tool.ruff.mccabe]
max-complexity = 25

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
